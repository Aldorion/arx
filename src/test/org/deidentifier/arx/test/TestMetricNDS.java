/*
 * ARX: Powerful Data Anonymization
 * Copyright (C) 2012 - 2014 Florian Kohlmayer, Fabian Prasser
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package org.deidentifier.arx.test;

import java.io.IOException;
import java.util.Arrays;
import java.util.Collection;

import org.deidentifier.arx.ARXConfiguration;
import org.deidentifier.arx.AttributeType.Hierarchy;
import org.deidentifier.arx.Data;
import org.deidentifier.arx.DataHandle;
import org.deidentifier.arx.criteria.HierarchicalDistanceTCloseness;
import org.deidentifier.arx.criteria.KAnonymity;
import org.deidentifier.arx.criteria.RecursiveCLDiversity;
import org.deidentifier.arx.metric.Metric;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * Tests for the NDS metric
 * 
 * @author Fabian Prasser
 * @author Florian Kohlmayer
 */
@RunWith(Parameterized.class)
public class TestMetricNDS extends TestAnonymizationAbstract {

    @Parameters(name = "{index}:[{0}]")
    public static Collection<Object[]> cases() throws IOException {
        return Arrays.asList(new Object[][] {

                /* 0 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.8635899476, 0.8388227381, 0.836307274, 0.8176580472, 0.7743518334, 0.7743518334, 0.7743518334, 0.7743518334]", new int[] { 0, 3, 0, 0, 2, 1, 1, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.297248193, 0.29678055, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306, 0.1297659306]", new int[] { 0, 3, 0, 0, 1, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.8635899476, 0.8388227381, 0.836307274, 0.8176580472, 0.7743518334, 0.7743518334, 0.7743518334, 0.7743518334]", new int[] { 0, 3, 0, 0, 2, 1, 1, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.4141161537, 0.4048463298, 0.345266671, 0.3371819112, 0.1797626152, 0.1797626152, 0.1797626152, 0.1797626152]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.3036444864, 0.2253280098, 0.0413434122, 0.0413434122, 0.0413434122, 0.0413434122]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.3036444864, 0.2253280098, 0.0413434122, 0.0413434122, 0.0413434122, 0.0413434122]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.3095956833, 0.0487699754, 0.0487699754]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                /* 10 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.271754194, 0.1919191919, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.271754194, 0.1919191919, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.271754194, 0.0, 0.0]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                /* 20 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6348915854, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.2300344804, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796, 0.1976148796]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6348915854, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995, 0.6195185995]", new int[] { 0, 1, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.3414163517, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868, 0.2755579868]", new int[] { 0, 2, 0, 0, 0, 0, 0, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.292801787, 0.2139690117, 0.027286652, 0.027286652, 0.027286652, 0.027286652]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 0.292801787, 0.2139690117, 0.027286652, 0.027286652, 0.027286652, 0.027286652]", new int[] { 0, 3, 0, 0, 3, 1, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[1.0, 1.0, 1.0, 1.0, 1.0, 0.2967295769, 0.0321881838, 0.0321881838]", new int[] { 1, 4, 0, 0, 3, 1, 2, 1 }, false) },
                /* 30 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.2381886447, 0.2373814339, 0.1860658044, 0.1839097593, 0.0643524965, 0.0643524965, 0.0643524965, 0.0643524965]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.3321564462, 0.3316048036, 0.2899546106, 0.2864628469, 0.1797626152, 0.1797626152, 0.1797626152, 0.1797626152]", new int[] { 0, 3, 0, 0, 1, 1, 1, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.5360166213, 0.5360166213, 0.3078622275, 0.2768495727, 0.2208311909, 0.2195394538, 0.1675207604, 0.0430342815]", new int[] { 1, 3, 0, 1, 2, 1, 1, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.5360166213, 0.5360166213, 0.3078622275, 0.2768495727, 0.2208311909, 0.2195394538, 0.1675207604, 0.0430342815]", new int[] { 1, 3, 0, 1, 2, 1, 1, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.6778091018, 0.6746031746, 0.6657963446, 0.650273224, 0.6296296296, 0.5151515151, 0.2796355377, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false) },
                /* 40 */{ new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                { new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false) },
                /* 50 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.10810810810810811, 0.0933392115, 0.0896666111027027, 0.0821724847972973, 0.08108108108108109, 0.0725971645, 0.05405405405405406, 0.02702702702702703]", new int[] { 1, 4, 1, 2, 2, 1, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.03612922650000001, 0.028100509500000002, 0.02702702702702703, 0.024086151000000004, 0.0200717925, 0.016861862491891894, 0.016057434000000002, 0.012043075500000002]", new int[] { 1, 3, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.10810810810810811, 0.0933392115, 0.0896666111027027, 0.0821724847972973, 0.08108108108108109, 0.0725971645, 0.05405405405405406, 0.02702702702702703]", new int[] { 1, 4, 1, 2, 2, 1, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.05405405405405406, 0.04706954816216216, 0.04486314441891892, 0.03489355677027027, 0.02990876294594595, 0.02702702702702703, 0.019939175297297298, 0.014954381472972974]", new int[] { 1, 4, 0, 0, 1, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05407585822972973, 0.05405405405405406, 0.050163949502702705, 0.05008346818378379, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.06030408765405406, 0.05405405405405406, 0.05342800528378379, 0.050317474821621626, 0.04974220290810811, 0.02702702702702703, 0.011250060470270272, 0.003750020156756757]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05407585822972973, 0.05405405405405406, 0.050163949502702705, 0.05008346818378379, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.06030408765405406, 0.05405405405405406, 0.05342800528378379, 0.050317474821621626, 0.04974220290810811, 0.02702702702702703, 0.011250060470270272, 0.003750020156756757]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05407585822972973, 0.05405405405405406, 0.050163949502702705, 0.05008346818378379, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric()).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05407585822972973, 0.05405405405405406, 0.050163949502702705, 0.05008346818378379, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                /* 60 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 0, 0, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.05405405405405406, 0.05404150918108108, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703, 0.0, 0.0]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.05405405405405406, 0.05404150918108108, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703, 0.0, 0.0]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.049563886540540544, 0.046828208745945954, 0.04406824767567568, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                /* 70 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0814359216891892, 0.08108108108108109, 0.07836077971621623, 0.07144350237837838, 0.06333905020270271, 0.054290614459459464, 0.05405405405405406, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.02702702702702703, 0.023845289472972975, 0.01854633625675676, 0.01589685964864865, 0.014655992772972972, 0.013247383040540541, 0.010597906432432434, 0.007948429824324326]", new int[] { 1, 3, 0, 0, 0, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0814359216891892, 0.08108108108108109, 0.07836077971621623, 0.07144350237837838, 0.06333905020270271, 0.054290614459459464, 0.05405405405405406, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.042784883540540546, 0.0360979360054054, 0.02807617244864865, 0.02702702702702703, 0.02406529067027027, 0.016856243551351353, 0.016043527113513513, 0.012032645335135135]", new int[] { 1, 3, 0, 0, 1, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.05254178785135136, 0.04902979764324324, 0.04803829321621622, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.058174810967567575, 0.05405405405405406, 0.05211420490540541, 0.049131124356756754, 0.04781305812972973, 0.02702702702702703, 0.007425039916216216, 0.0024750133054054053]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.05254178785135136, 0.04902979764324324, 0.04803829321621622, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.058174810967567575, 0.05405405405405406, 0.05211420490540541, 0.049131124356756754, 0.04781305812972973, 0.02702702702702703, 0.007425039916216216, 0.0024750133054054053]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.05254178785135136, 0.04902979764324324, 0.04803829321621622, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.33d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.24324324324324326, 0.1891891891891892, 0.08108108108108109, 0.05405405405405406, 0.05254178785135136, 0.04902979764324324, 0.04803829321621622, 0.02702702702702703]", new int[] { 1, 4, 1, 1, 2, 1, 2, 1 }, false)) },
                /* 80 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.08455054074864865, 0.08207956655135136, 0.07800848389459461, 0.07233897591891893, 0.0654832520945946, 0.060681728075675685, 0.04222357949189189, 0.01812549117027027]", new int[] { 1, 4, 1, 2, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.029619498635135137, 0.02543562060810811, 0.019783260472972974, 0.016957080405405407, 0.015293283045945948, 0.011948673924324325, 0.011304720270270272, 0.008478540202702703]", new int[] { 1, 3, 0, 0, 1, 0, 0, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.08455054074864865, 0.08207956655135136, 0.07800848389459461, 0.07233897591891893, 0.0654832520945946, 0.060681728075675685, 0.04222357949189189, 0.01812549117027027]", new int[] { 1, 4, 1, 2, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.042274259243243247, 0.03766095468918919, 0.03744381140540541, 0.0359967372972973, 0.034255594540540536, 0.014529077786486487, 0.011250060470270272, 0.003750020156756757]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.12530712529459462, 0.123024664, 0.1093951093945946, 0.08997247900000001, 0.051051051048648655, 0.03663832982702703, 0.030230868940540542, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.042274259243243247, 0.03766095468918919, 0.03744381140540541, 0.0359967372972973, 0.034255594540540536, 0.014529077786486487, 0.011250060470270272, 0.003750020156756757]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.12530712529459462, 0.123024664, 0.1093951093945946, 0.08997247900000001, 0.051051051048648655, 0.03663832982702703, 0.030230868940540542, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.042274259243243247, 0.03766095468918919, 0.03744381140540541, 0.0359967372972973, 0.034255594540540536, 0.014529077786486487, 0.011250060470270272, 0.003750020156756757]", new int[] { 1, 4, 0, 1, 2, 1, 1, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.12530712529459462, 0.123024664, 0.1093951093945946, 0.08997247900000001, 0.051051051048648655, 0.03663832982702703, 0.030230868940540542, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(0.66d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.12530712529459462, 0.123024664, 0.1093951093945946, 0.08997247900000001, 0.051051051048648655, 0.03663832982702703, 0.030230868940540542, 0.0]", new int[] { 0, 4, 1, 1, 3, 2, 2, 1 }, false)) },
                /* 90 */{ weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(1.0d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new KAnonymity(5)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new RecursiveCLDiversity("occupation", 4.0, 5)), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 0 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },
                { weight(new ARXAnonymizationTestCase(ARXConfiguration.create(0.05d, Metric.createLossMetric(1.0d)).addCriterion(new HierarchicalDistanceTCloseness("occupation", 0.2, Hierarchy.create("../arx-data/data-junit/adult_hierarchy_occupation.csv", ';'))), "occupation", "../arx-data/data-junit/adult.csv", "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]", new int[] { 1, 4, 0, 2, 3, 2, 2, 1 }, false)) },

        });
    }

    /**
     * Apply weights to the test case
     * @return the test case passed to the method
     * @throws IOException
     */
    private static ARXAnonymizationTestCase weight(ARXAnonymizationTestCase testcase) throws IOException {

        // Create temporary data object
        Data data = Data.create(testcase.dataset, ';');
        DataHandle handle = data.getHandle();

        // Weight attributes according to their order in the dataset
        for (int i = 0; i < handle.getNumColumns(); i++) {
            testcase.config.setAttributeWeight(handle.getAttributeName(i), i + 1);
        }

        // Return argument
        return testcase;
    }

    /**
     * Creates a new instance
     * @param testCase
     */
    public TestMetricNDS(final ARXAnonymizationTestCase testCase) {
        super(testCase);
    }
}
